name: PR Checks

on: # yamllint disable-line rule:truthy
  pull_request:
    branches: [reboot]

jobs:
  check-changes:
    runs-on: ubuntu-latest
    outputs:
      changes: ${{ steps.filter.outputs.changes }}
    steps:
      - name: checkout source
        uses: actions/checkout@v4

      - name: filter changes
        uses: dorny/paths-filter@v3
        id: filter
        with:
          filters: |
            changes:
              - '**/*.go'
              - 'go.mod'
              - 'go.sum'
              - 'Makefile'
  fmt:
    needs: check-changes
    if: needs.check-changes.outputs.changes == 'true'
    runs-on: ubuntu-latest
    steps:
      - name: checkout source
        uses: actions/checkout@v4

      - name: setup go
        uses: actions/setup-go@v5.4.0
        with:
          go-version-file: go.mod

      - name: make fmt
        shell: bash
        run: make fmt && git diff --exit-code

  lint:
    needs: check-changes
    if: needs.check-changes.outputs.changes == 'true'
    runs-on: ubuntu-latest
    steps:
      - name: checkout source
        uses: actions/checkout@v4

      - name: setup go
        uses: actions/setup-go@v5.4.0
        with:
          go-version-file: go.mod
          cache: false

      - name: golangci-lint
        uses: golangci/golangci-lint-action@v7
        with:
          version: v2.1.6
          args: --timeout=3m --issues-exit-code=0 ./...
          only-new-issues: true

  vet:
    needs: check-changes
    if: needs.check-changes.outputs.changes == 'true'
    runs-on: ubuntu-latest
    steps:
      - name: checkout source
        uses: actions/checkout@v4

      - name: setup go
        uses: actions/setup-go@v5.4.0
        with:
          go-version-file: go.mod
          cache: false

      - name: make vet
        shell: bash
        run: make vet && git diff --exit-code

  docs:
    runs-on: ubuntu-latest
    steps:
      - name: checkout source
        uses: actions/checkout@v4

      - name: setup go
        uses: actions/setup-go@v5.4.0
        with:
          go-version-file: go.mod
          cache: false

      - name: make gen-metrics-docs
        shell: bash
        run: make gen-metrics-docs && git diff --exit-code

  test-and-codecov:
    needs: check-changes
    if: needs.check-changes.outputs.changes == 'true'
    uses: ./.github/workflows/test-and-codecov.yaml
    secrets:
      CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}

  pre-commit:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout source
        uses: actions/checkout@v3
        with:
          ref: ${{ github.event.pull_request.head.sha }}

      - name: Setup Python
        uses: actions/setup-python@v3

      - name: Setup Pre-commit
        run: pip install pre-commit

      - name: Run Pre-commit
        run: pre-commit run --all-files

      - name: Run Commitlint
        run: |
          COMMIT_MSG=$(git log -1 --pretty=%B)
          echo "$COMMIT_MSG" > .git/COMMIT_EDITMSG
          pre-commit run commitlint --hook-stage commit-msg --commit-msg-file .git/COMMIT_EDITMSG

  build-images:
    runs-on: ubuntu-latest
    steps:
      - name: checkout source
        uses: actions/checkout@v4

      - name: setup go
        uses: actions/setup-go@v5.4.0
        with:
          go-version-file: go.mod
          cache: false

      - name: build images for PR checks
        uses: ./.github/publish-image
        with:
          registry: localhost:5001

  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout source
        uses: actions/checkout@v4

      - name: Build and Deploy Kepler on K8s
        uses: ./.github/k8s
